version: 0.2

env:
  variables:
    AWS_REGION: "us-east-1"
    AWS_ACCOUNT_ID: "586928288932"
    IMAGE_REPO_NAME: "awspringbootdeployment-app"
    CONTAINER_NAME: "springboot-ecs-new"

phases:
  install:
    runtime-versions:
      java: corretto11
    commands:
      - "set -euo pipefail"
      - "echo Checking AWS CLI and Docker versions"
      - "aws --version"
      - "docker --version"
      - "echo Logging into ECR"
      - "aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"

  pre_build:
    commands:
      - "echo Preparing build environment"
      - "export REPOSITORY_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"
      - 'if [ -n "${CODEBUILD_RESOLVED_SOURCE_VERSION:-}" ]; then export IMAGE_TAG=${CODEBUILD_RESOLVED_SOURCE_VERSION}; else export IMAGE_TAG=latest; fi'
      - 'echo Repo=${REPOSITORY_URI} Tag=${IMAGE_TAG}'
      - "docker image prune -f || true"

  build:
    commands:
      - "echo Building Spring Boot JAR"
      - "mvn -q -DskipTests clean package"
      - "echo Building Docker image ${REPOSITORY_URI}:${IMAGE_TAG}"
      - "docker build -t ${REPOSITORY_URI}:${IMAGE_TAG} ."
      - "echo Tagging also as :latest"
      - "docker tag ${REPOSITORY_URI}:${IMAGE_TAG} ${REPOSITORY_URI}:latest"
      - "echo Pushing image tags (:${IMAGE_TAG} and :latest)"
      - "docker push ${REPOSITORY_URI}:${IMAGE_TAG}"
      - "docker push ${REPOSITORY_URI}:latest"

  post_build:
    commands:
      - "echo Creating imagedefinitions.json (using :${IMAGE_TAG})"
      - 'printf "[{\\"name\\":\\"%s\\",\\"imageUri\\":\\"%s:%s\\"}]\n" "${CONTAINER_NAME}" "${REPOSITORY_URI}" "${IMAGE_TAG}" > imagedefinitions.json'
      - "echo Listing workspace to verify artifact root"
      - "pwd && ls -la"
      - "echo imagedefinitions.json contents:"
      - "cat imagedefinitions.json"

artifacts:
  files:
    - imagedefinitions.json
  discard-paths: yes
