version: 0.2

env:
  variables:
    AWS_REGION: "us-east-1"
    IMAGE_REPO_NAME: "awspringbootdeployment-app"
    AWS_ACCOUNT_ID: "586928288932"

phases:
  install:
    runtime-versions:
      java: corretto11
    commands:
      - "echo Checking AWS CLI and Docker versions"
      - "aws --version"
      - "docker --version"
      - "echo Logging into ECR"
      - "aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com"

  pre_build:
    commands:
      - |
        echo "Building Spring Boot JAR"
        set -o pipefail
        mvn -X clean package -DskipTests | tee build.log
        MAVEN_EXIT=${PIPESTATUS[0]}
        echo "Packaging complete (status: $MAVEN_EXIT)"
        if [ $MAVEN_EXIT -ne 0 ]; then
          echo "Maven build failed, see build.log for details"
          exit $MAVEN_EXIT
        fi
      - |
        echo "Building and pushing Docker image"
        IMAGE_TAG=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION
        docker build -t "$IMAGE_TAG" .
        docker tag "$IMAGE_TAG" "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest"
        docker push "$IMAGE_TAG"
        docker push "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest"

  post_build:
    commands:
      - "echo Build completed on $(date)"
      - "echo Image URIs:"
      - "echo $IMAGE_TAG"
      - "echo $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest"

artifacts:
  files:
    - "target/*.jar"
    - "build.log"
  discard-paths: yes
