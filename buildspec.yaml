version: 0.2

env:
  variables:
    AWS_REGION: "us-east-1"
    AWS_ACCOUNT_ID: "586928288932"
    IMAGE_REPO_NAME: "awspringbootdeployment-app"
    # Use CodeBuild commit SHA when available; otherwise 'latest'
    IMAGE_TAG: "${CODEBUILD_RESOLVED_SOURCE_VERSION:-latest}"
    # MUST match containerDefinitions[].name in your ECS task definition (case-sensitive)
    CONTAINER_NAME: "springboot-ecs-new"

phases:
  install:
    runtime-versions:
      java: corretto11
    commands:
      - set -euo pipefail
      - echo "Checking AWS CLI and Docker versions"
      - aws --version
      - docker --version
      - echo "Logging into ECR"
      - aws ecr get-login-password --region "${AWS_REGION}" \
        | docker login --username AWS --password-stdin "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"

  pre_build:
    commands:
      - echo "Preparing build environment"
      - export REPOSITORY_URI="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"
      - echo "Repository: ${REPOSITORY_URI}"
      - docker image prune -f || true

  build:
    commands:
      - echo "Building Spring Boot JAR"
      - mvn -X clean package -DskipTests | tee build.log
      - echo "Building Docker image ${REPOSITORY_URI}:${IMAGE_TAG}"
      - docker build -t "${REPOSITORY_URI}:${IMAGE_TAG}" .
      - echo "Tagging also as :latest"
      - docker tag "${REPOSITORY_URI}:${IMAGE_TAG}" "${REPOSITORY_URI}:latest"
      - echo "Pushing image tags (:${IMAGE_TAG} and :latest)"
      - docker push "${REPOSITORY_URI}:${IMAGE_TAG}"
      - docker push "${REPOSITORY_URI}:latest"

  post_build:
    commands:
      - echo "Creating imagedefinitions.json for ECS deploy (using image digest)"
      - DIGEST=$(aws ecr describe-images \
          --repository-name "${IMAGE_REPO_NAME}" \
          --image-ids imageTag="${IMAGE_TAG}" \
          --query 'imageDetails[0].imageDigest' --output text)
      - printf '[{"name":"%s","imageUri":"%s@%s"}]\n' \
          "${CONTAINER_NAME}" "${REPOSITORY_URI}" "${DIGEST}" > imagedefinitions.json
      - echo "imagedefinitions.json contents:"
      - cat imagedefinitions.json
      - echo "Build completed on $(date)"

artifacts:
  files:
    - imagedefinitions.json   # ECS requires this at the ZIP root
  discard-paths: yes
